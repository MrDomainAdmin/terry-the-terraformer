---
- name: Prepare All Systems with Basic Configurations
  gather_facts: true
  hosts: all
  become: true
  tasks:

  - name: Ensure the terryites user group exists
    ansible.builtin.group:
      name: terryites
      state: present

  - name: Set the new_hostname fact (when domain is set)
    set_fact:
      new_hostname: "{{ domain }}"
    when: domain is defined

  - name: Set the new_hostname fact (when domain not set)
    set_fact:
      new_hostname: "{{ name }}"
    when: domain is undefined

  - name: Set the hostname of the server to new_hostname
    ansible.builtin.hostname:
      name: "{{ new_hostname }}"
    ignore_errors: true

  - name: Replace the localhost entry with our new_hostname
    ansible.builtin.lineinfile:
      path: /etc/hosts
      regexp: '^127\.0\.0\.1 localhost$'
      line: "127.0.0.1 localhost\n127.0.0.1 {{ new_hostname }}"
      owner: root
      group: root
      mode: '0644'

  - name: Add the team as users to server
    ansible.builtin.user:
      name: "{{ item.value.user }}"
      state: present
      create_home: yes
      groups: [ terryites ]
      shell: /bin/bash
    loop: "{{ team | dict2items }}"
    loop_control:
      label: "{{ item.value.user }}"
  
  - name: Add SSH Keys for the defined users
    include_tasks: "{{ playbook_dir }}/install/install-ssh-key.yml"
    loop: "{{ team | dict2items }}"
    loop_control:
      label: "{{ user.value.user }}"
      loop_var: "user"

  - name: Allow the terryites group to sudo without a password
    ansible.builtin.lineinfile:
      path: /etc/sudoers
      line: "%terryites ALL=(ALL) NOPASSWD:ALL"
      state: present

  - name: Update APT repositories cache and install "ufw" and "tmux" packages
    ansible.builtin.apt:
      pkg:
        - ufw
        - tmux
      update_cache: yes
      lock_timeout: 360

  - name: Modify UFW config to govern docker routing (or else firewall rules will fail for docker containers)
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/../templates/ufw/after.rules.j2"
      dest: /etc/ufw/after.rules

  - name: Allow SSH connections from the team
    community.general.ufw:
      rule: allow
      proto: tcp
      src: "{{ item.value.public_ip }}"
      port: 22
      comment: "Allow SSH {{ item.value.user }}"
    loop: "{{ team | dict2items }}"
    loop_control:
      label: "{{ item.value.user }}"

  - name: Install Nebula
    ansible.builtin.import_tasks: "{{ playbook_dir }}/install/install-nebula.yml"
    when: nebula

  - name: Allow Deployed Resources to Freely Communicate (over internet, when Nebula not used)
    ansible.builtin.import_tasks: "{{ playbook_dir }}/core/allow-firewall-exceptions-for-resources.yml"
    when: not nebula

  - name: Install Filebeats
    include_tasks: '{{ playbook_dir }}/install/install-filebeat.yml'
    when: elastic

  - name: Enable and start UFW
    community.general.ufw:
      state: enabled

      